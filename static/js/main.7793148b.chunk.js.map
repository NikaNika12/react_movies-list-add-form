{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","validation","useState","Math","random","toString","slice","id","touched","setTouched","hasError","trim","hasUrlError","length","htmlFor","classNames","type","placeholder","event","target","onBlur","formBlank","pattern","validateUrl","url","test","NewMovie","onAdd","form","setForm","count","setCount","formChangeHandler","key","state","isDisabled","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7793148b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  validation?: (value: string) => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  validation = () => true,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value.trim();\n  const hasUrlError = !validation(value) && value.length > 0;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || hasUrlError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasUrlError && (\n        <p className=\"help is-danger\">Url is not valid</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void,\n};\n\nconst formBlank = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\n// eslint-disable-next-line max-len\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nconst validateUrl = (url: string) => pattern.test(url);\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [form, setForm] = useState(formBlank);\n  const [count, setCount] = useState(0);\n\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = form;\n\n  const formChangeHandler = (key: string, value: string) => {\n    setForm(state => ({\n      ...state,\n      [key]: value,\n    }));\n  };\n\n  const isDisabled = !title || !imgUrl || !imdbUrl\n    || !imdbId || !validateUrl(imgUrl) || !validateUrl(imdbUrl);\n\n  const handleSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onAdd(form);\n    setCount(count + 1);\n    setForm(formBlank);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      onSubmit={handleSubmit}\n      key={count}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(value) => formChangeHandler('title', value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(value) => formChangeHandler('description', value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(value) => formChangeHandler('imgUrl', value)}\n        validation={validateUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(value) => formChangeHandler('imdbUrl', value)}\n        validation={validateUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(value) => formChangeHandler('imdbId', value)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}